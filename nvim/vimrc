set nocompatible

" dont discard buffers when switching to a different one
set hidden

" configure nice defaults
syntax enable
filetype plugin on
set number
set wildmenu
set relativenumber

call plug#begin('~/.nvim/plugged')
  " Git
  Plug 'airblade/vim-gitgutter'
  Plug 'tpope/vim-fugitive'

  " Files / Buffers
  Plug 'junegunn/fzf'
  Plug 'junegunn/fzf.vim'
  Plug 'scrooloose/nerdtree', { 'on': [ 'NERDTreeToggle', 'NERDTree' ] }
  Plug 'tpope/vim-eunuch', { 'on': [ 'Rename', 'Chmod', 'Mkdir', 'SudoWrite', 'SudoEdit' ] }

  " Code Minaplion
  Plug 'autozimu/LanguageClient-neovim', { 'branch': 'next', 'do': 'bash install.sh', }
  Plug 'Shougo/echodoc.vim'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-surround'
  Plug 'liuchengxu/vista.vim'
  Plug 'jiangmiao/auto-pairs'
  Plug 'tpope/vim-repeat'
  Plug 'tpope/vim-sleuth'

  " Auto Complete
  Plug 'prabirshrestha/asyncomplete.vim'
  Plug 'yami-beta/asyncomplete-omni.vim'

  " Filetype Plugins
  Plug 'isobit/vim-caddyfile'
  Plug 'posva/vim-vue'
  Plug 'rust-lang/rust.vim'

  " Look and Feel
  Plug 'chriskempson/base16-vim'
  Plug 'mike-hearn/base16-vim-lightline'
  Plug 'psliwka/vim-smoothie'
  Plug 'itchyny/lightline.vim'
  Plug 'mengelbrecht/lightline-bufferline'
call plug#end()

" NOTE: This may break in some terminals, maybe add a check later
set termguicolors
colorscheme base16-{{theme}}

let g:echodoc#enable_at_startup = 1
let g:echodoc#type = 'floating'

call asyncomplete#register_source(asyncomplete#sources#omni#get_source_options({
\ 'name': 'omni',
\ 'whitelist': ['*'],
\ 'blacklist': [],
\ 'completor': function('asyncomplete#sources#omni#completor')
\  }))

let g:LanguageClient_serverCommands = {
  \ 'c': ['clangd'],
  \ 'cpp': ['clangd'],
  \ 'json': ['json-languageserver', '--stdio'],
  \ 'python': ['pyls'],
  \ 'rust': ['rls'],
  \ }

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v(node_modules|target|[\/]\.(git|hg|svn))$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

set showtabline=2
let g:lightline = {
\   'tabline': {
\     'left': [ [ 'buffers' ] ],
\     'right': [ [ 'close' ] ]
\   },
\   'component_expand': {
\     'buffers': 'lightline#bufferline#buffers'
\   },
\   'component_type': {
\     'buffers': 'tabsel'
\   },
\   'colorscheme': 'base16_{{theme | replace("-","_")}}'
\ }

" Vista (outline)
let g:vista_cursor_delay = 80
let g:vista_echo_cursor_strategy = "floating_win"

"
" Keybindings
"

" FZF
let $FZF_DEFAULT_COMMAND = 'ag -g ""'
noremap <C-f> :Files<CR>
noremap <Leader>b :Buffers<CR>

nmap <silent> <Leader>o :Vista ctags<CR>

" LanguageClient Key Bindings
function SetupLSP()
  set omnifunc=LanguageClient#omniComplete
  set completefunc=LanguageClient#complete

  nmap <silent> gd :call LanguageClient#textDocument_definition()<CR>
  nmap <silent> gt :call LanguageClient#textDocument_typeDefinition()<CR>
  nmap <silent> gr :call LanguageClient#textDocument_references()<CR>

  " nmap <Leader>o :call LanguageClient_textDocument_documentSymbol()<CR>
  nmap <silent> <Leader>o :Vista lcn<CR>

  nmap <Leader>r :call LanguageClient#textDocument_rename()<CR>
  nmap <Leader>f :call LanguageClient#textDocument_formatting()<CR>
  vmap <Leader>f :call LanguageClient#textDocument_rangeFormatting()<CR>
  nmap <Leader>a :call LanguageClient_textDocument_codeAction()<CR>
endfunction()

augroup LSP
  au!
  autocmd FileType c,cpp,json,python,rust call SetupLSP()
augroup end

" Escape the current Mode
noremap <Leader><Leader> <Esc>
inoremap <Leader><Leader> <Esc>
tnoremap <Leader><Leader> <Esc>

" Buffer Management
" TODO: add switch to buffer number excluding 'deleted' buffers
noremap <Tab> :bnext<CR>
noremap <S-Tab> :bprev<CR>

"
" FileType Config
"
autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4
autocmd FileType go setlocal expandtab shiftwidth=4 softtabstop=4
autocmd FileType c setlocal expandtab shiftwidth=4 softtabstop=4

set expandtab
